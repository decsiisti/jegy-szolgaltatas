openapi: 3.0.1
info:
  title: Ticket service Partner module
  description: The Partner module provides information about Events and handles reservations
  version: '1.0'
servers:
  - url: http://localhost:12222
tags:
  - name: partner
    description: List events and reserve seats for them
paths:
  /getEvents:
    get:
      tags:
        - partner
      summary: Get the list of events
      operationId: getEvents
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
      - user_token: []

  /getEvent/{EventId}:
    get:
      tags:
        - partner
      summary: Get the details of an Event
      operationId: getEvent
      parameters:
        - name: EventId
          in: path
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetails'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
      security:
      - user_token: []

  /reserve:
    post:
      tags:
        - partner
      summary: Reserve a seat
      operationId: reserveSeat
      parameters:
        - name: EventId
          in: query
          description: The ID of the Event
          required: true
          schema:
            type: integer
            format: int64
        - name: SeatId
          in: query
          description: The ID of the Seat
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessfulReservation'
        400:
          $ref: '#/components/responses/GeneralError'
        401:
          $ref: '#/components/responses/Unauthorized'
      security:
      - user_token: []

components:
  schemas:
    Event:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
          description: The ID of the Event
        title:
          type: string
          description: The title of the Event
          example: "Májusi mulatság"
        location:
          type: string
          description: The location where the Event takes place
        startTimeStamp:
          type: string
          description: The timestamp when the Event starts
        endTimeStamp:
          type: string
          description: The timestamp when the Event ends

    EventList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Event'
        success:
          type: boolean

    ErrorResponse:
      type: object
      properties:
        Success:
          type: boolean
        ErrorCode:
          type: integer
          format: int64

    Seat:
      type: object
      properties:
        id:
          type: string
        price:
          type: integer
          format: int64
        currency:
          type: string
        reserved:
          type: boolean

    EventSeats:
      type: object
      properties:
        eventId:
          type: integer
          format: int64
        seats:
          type: array
          items:
            $ref: '#/components/schemas/Seat'

    EventDetails:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EventSeats'
        success:
          type: boolean

    SuccessfulReservation:
      type: object
      properties:
        Success:
          type: boolean
        ReservationId:
          type: integer
          format: int64

  responses:
    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    GeneralError:
      description: General error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  securitySchemes:
    api_key:
      type: apiKey
      name: apiKey
      in: header
